is_global = true

### .NET コーディング規則 ###

# using の整理
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. と Me. の設定
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# 言語キーワードと BCL の種類の設定
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# かっこの設定
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# 修飾子設定
dotnet_style_require_accessibility_modifiers = omit_if_default

# 式レベルの設定
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_collection_expression = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# フィールド設定
dotnet_style_readonly_field = true

# パラメーターの設定
dotnet_code_quality_unused_parameters = all

# 抑制の設定
dotnet_remove_unnecessary_suppression_exclusions = none
dotnet_diagnostic.IDE0079.severity = warning

# 改行設定
dotnet_style_allow_multiple_blank_lines_experimental = false
dotnet_style_allow_statement_immediately_after_block_experimental = false

### C# コーディング規則 ###

# var を優先
csharp_style_var_elsewhere = true
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true

# 式のようなメンバー
csharp_style_expression_bodied_accessors = when_on_single_line
csharp_style_expression_bodied_constructors = when_on_single_line
csharp_style_expression_bodied_indexers = when_on_single_line
csharp_style_expression_bodied_lambdas = when_on_single_line:warning # 重大度を省略すると動作しない。
csharp_style_expression_bodied_local_functions = when_on_single_line
csharp_style_expression_bodied_methods = when_on_single_line
csharp_style_expression_bodied_operators = when_on_single_line
csharp_style_expression_bodied_properties = when_on_single_line

# パターン マッチング設定
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Null チェック設定
csharp_style_conditional_delegate_call = true

# 修飾子設定
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async
csharp_style_prefer_readonly_struct = true
csharp_style_prefer_readonly_struct_member = true

# コード ブロックの設定
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = true
csharp_style_namespace_declarations = file_scoped
csharp_style_prefer_method_group_conversion = true
csharp_style_prefer_primary_constructors = true
csharp_style_prefer_top_level_statements = true

# 式レベルの設定
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_local_over_anonymous_function = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = true
csharp_style_prefer_tuple_swap = true
csharp_style_prefer_utf8_string_literals = true
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable:none

# 'using' ディレクティブの基本設定
csharp_using_directive_placement = outside_namespace

# 改行設定
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = false
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_embedded_statements_on_same_line_experimental = false

### C# 書式ルール ###

# 改行設定
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# インデント設定
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# スペース設定
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# 折り返しの設定
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

### 命名スタイル ###

## 名前付けルール ##

# 名前空間
dotnet_naming_rule.namespace_should_be_pascal_case.severity = warning
dotnet_naming_rule.namespace_should_be_pascal_case.symbols = namespace
dotnet_naming_rule.namespace_should_be_pascal_case.style = pascal_case

# 型
dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

# interface
dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

# ジェネリックの型引数
dotnet_naming_rule.type_parameter_should_be_begins_with_t.severity = warning
dotnet_naming_rule.type_parameter_should_be_begins_with_t.symbols = type_parameter
dotnet_naming_rule.type_parameter_should_be_begins_with_t.style = begins_with_t

# 定数
dotnet_naming_rule.constant_should_be_pascal_case.severity = warning
dotnet_naming_rule.constant_should_be_pascal_case.symbols = constant
dotnet_naming_rule.constant_should_be_pascal_case.style = pascal_case

# 静的読み取り専用フィールド
dotnet_naming_rule.static_readonly_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_readonly_should_be_pascal_case.symbols = static_readonly
dotnet_naming_rule.static_readonly_should_be_pascal_case.style = pascal_case

# privateとinternalフィールド
dotnet_naming_rule.private_internal_fields_should_be_begins_with_underscore.severity = warning
dotnet_naming_rule.private_internal_fields_should_be_begins_with_underscore.symbols = private_internal_fields
dotnet_naming_rule.private_internal_fields_should_be_begins_with_underscore.style = begins_with_underscore

# privateとinternal以外のフィールド
dotnet_naming_rule.non_private_internal_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_internal_should_be_pascal_case.symbols = non_private_internal
dotnet_naming_rule.non_private_internal_should_be_pascal_case.style = pascal_case

# フィールド以外のメンバー
dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# 非同期メソッド
dotnet_naming_rule.async_methods_should_be_ends_with_async.severity = warning
dotnet_naming_rule.async_methods_should_be_ends_with_async.symbols = async_methods
dotnet_naming_rule.async_methods_should_be_ends_with_async.style = ends_with_async

# 引数
dotnet_naming_rule.parameter_should_be_camel_case.severity = warning
dotnet_naming_rule.parameter_should_be_camel_case.symbols = parameter
dotnet_naming_rule.parameter_should_be_camel_case.style = camel_case

# ローカル関数
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = pascal_case

# ローカル変数
dotnet_naming_rule.local_variable_should_be_camel_case.severity = warning
dotnet_naming_rule.local_variable_should_be_camel_case.symbols = local_variable
dotnet_naming_rule.local_variable_should_be_camel_case.style = camel_case

## 記号の仕様 ##

# 名前空間
dotnet_naming_symbols.namespace.applicable_kinds = namespace

# 型
dotnet_naming_symbols.types.applicable_kinds = class, struct, enum

# interface
dotnet_naming_symbols.interface.applicable_kinds = interface

# ジェネリックの型引数
dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter

# 定数
dotnet_naming_symbols.constant.applicable_kinds = field, local
dotnet_naming_symbols.constant.required_modifiers = const

# 静的読み取り専用フィールド
dotnet_naming_symbols.static_readonly.applicable_kinds = field
dotnet_naming_symbols.static_readonly.required_modifiers = readonly, static

# privateとinternalフィールド
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal

# privateとinternal以外のフィールド
dotnet_naming_symbols.non_private_internal.applicable_kinds = field
dotnet_naming_symbols.non_private_internal.applicable_accessibilities = public, protected, protected_internal, private_protected

# フィールド以外のメンバー
dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, delegate, method

# 非同期メソッド
dotnet_naming_symbols.async_methods.applicable_kinds = method, local_function
dotnet_naming_symbols.async_methods.required_modifiers = async

# 引数
dotnet_naming_symbols.parameter.applicable_kinds = parameter

# ローカル変数
dotnet_naming_symbols.local_variable.applicable_kinds = local

# ローカル関数
dotnet_naming_symbols.local_functions.applicable_kinds = local_function

## 命名スタイル ##

# PascalCase
dotnet_naming_style.pascal_case.capitalization = pascal_case

# camelCase
dotnet_naming_style.camel_case.capitalization = camel_case

# IPascalCase
dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.capitalization = pascal_case

# TPascalCase
dotnet_naming_style.begins_with_t.required_prefix = T
dotnet_naming_style.begins_with_t.capitalization = pascal_case

# PascalCaseAsync
dotnet_naming_style.ends_with_async.required_suffix = Async
dotnet_naming_style.ends_with_async.capitalization = pascal_case

# _camelCase
dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

### Roslyn Analyzers ###

## 全体 ##

# すべてのアナライザーのルール重大度を警告レベルに設定。
dotnet_analyzer_diagnostic.severity = warning

## Microsoft.CodeAnalysis.NetAnalyzers ##

# デフォルトのapi_surfaceを変更
dotnet_code_quality.api_surface = all

# プラットフォームの互換性を検証する
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1416
# 理由: .NET 5未満でも有効化する。
dotnet_code_quality.enable_platform_analyzer_on_pre_net5_target = true

# ジェネリック リストを公開しません
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1002
# 理由: 内部ではListを利用したい場合がある。
dotnet_code_quality.CA1002.api_surface = public

# 一般的な例外の種類はキャッチしません
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1031
dotnet_code_quality.CA1031.disallowed_symbol_names = T:System.NullReferenceException

# 空のインターフェイスは使用しないでください
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1040
# 理由: コンパイル時にインターフェイスをマーカーとして、型の識別を行いたい場合があるため。
dotnet_diagnostic.CA1040.severity = none

# 参照可能なインスタンス フィールドを宣言しません
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1051
# 構造体ではプロパティではなくフィールドにしたい場合がある。
dotnet_code_quality.CA1051.exclude_structs = true

# 識別子には型名を含めないでください
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1720
# 理由: 内部では識別子に型名を利用したい場合がある。
dotnet_code_quality.CA1720.api_surface = public

# 識別子は正しいプレフィックスを含んでいなければなりません
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1715
# 理由: IDE1006と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
dotnet_diagnostic.CA1715.severity = none

# 識別子はキーワードと同一にすることはできません
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1716
# 理由: キーワードと重複しても逐語的・エスケープ識別子を使用すれば問題ない。
dotnet_diagnostic.CA1716.severity = none

# タスクを直接待機しないでください
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2007
# 理由: デフォルトで有効にならない規則。
dotnet_diagnostic.CA2007.severity = warning
dotnet_code_quality.CA2007.output_kind = ConsoleApplication, DynamicallyLinkedLibrary

# 演算子オーバーロードには名前付けされた代替が存在します
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2225
# 理由: 代替メソッドを定義する必要性がない。
dotnet_diagnostic.CA2225.severity = none

# 基本型 'type' は CLS に準拠していません
# https://learn.microsoft.com/dotnet/csharp/language-reference/compiler-messages/cs3009
# 理由: CLSに準拠する必要性がない。
dotnet_diagnostic.CA3009.severity = none

## Microsoft.VisualStudio.Threading.Analyzers ##

# Call async methods when in an async method
# https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD103.md
# 理由: CA1849と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1849
dotnet_diagnostic.VSTHRD103.severity = none

# Use .ConfigureAwait(bool).
# https://github.com/microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD111.md
# 理由: CA2007と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2007
dotnet_diagnostic.VSTHRD111.severity = none

# Use Async suffix for async methods
# https://github.com/microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD200.md
# 理由: IDE1006と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
dotnet_diagnostic.VSTHRD200.severity = none

## StyleCop.Analyzers ##

# Naming Rules
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/NamingRules.md
# 理由: IDE1006と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
dotnet_analyzer_diagnostic.category-StyleCop.CSharp.NamingRules.severity = none

# A call to an instance member of the local class or a base class is not prefixed with 'this.', within a C# code file.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1101.md
# 理由: IDE0009と重複。IDE0003を優先させる。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009
dotnet_diagnostic.SA1101.severity = none

# A C# statement contains parenthesis which are unnecessary and should be removed.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1119.md
# 理由: IDE0047と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_diagnostic.SA1119.severity = none

# An element of a tuple was referenced by its metadata name when an element name is available.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1142.md
# 理由: IDE0033と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0033
dotnet_diagnostic.SA1142.severity = none

# A C# using directive is placed outside of a namespace element.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1200.md
# 理由: IDE0065と重複。
# http://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0065
dotnet_diagnostic.SA1200.severity = none

# The partial element does not have an access modifier defined.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1205.md
# 理由: IDE0040とinternal classの場合に競合する。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0040
dotnet_diagnostic.SA1205.severity = none

# A field name in C# contains an underscore.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1310.md
# 理由: IDE1006で指定できない規則。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
dotnet_diagnostic.SA1310.severity = warning

# Element names within a tuple type should have the correct casing.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1316.md
# 理由: IDE1006で指定できない規則。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
dotnet_diagnostic.SA1316.severity = warning

# The access modifier for a C# element has not been explicitly defined.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1400.md
# 理由: IDE0040と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0040
dotnet_diagnostic.SA1400.severity = none

# A field within a C# class has an access modifier other than private.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md
# 理由: CA1051と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1051
dotnet_diagnostic.SA1401.severity = none

# A C# statement contains a complex arithmetic expression which omits parenthesis around operators.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1407.md
# 理由: IDE0048と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_diagnostic.SA1407.severity = none

# A C# statement contains a complex conditional expression which omits parenthesis around operators.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md
# 理由: IDE0048と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_diagnostic.SA1408.severity = none

# The last statement in a multi-line C# initializer or list is missing a trailing comma.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1413.md
# 理由: 末尾にカンマを付けたくない。
dotnet_diagnostic.SA1413.severity = none

# The documentation text within a C# property's <summary> tag does not match the accessors within the property.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1623.md
# 理由: 日本語でコメントを書きたい。
dotnet_diagnostic.SA1623.severity = none

# A section of the Xml header documentation for a C# element does not end with a period (also known as a full stop).
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1629.md
# 理由: 日本語でコメントを書きたい。
dotnet_diagnostic.SA1629.severity = none

# A C# code file is missing a standard file header.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1633.md
# 理由: ファイルヘッダーは不要。
dotnet_diagnostic.SA1633.severity = none

# The XML documentation header for a C# constructor does not contain the appropriate summary text.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1642.md
# 理由: 日本語でコメントを書きたい。
dotnet_diagnostic.SA1642.severity = none

# The Xml documentation header for a C# finalizer does not contain the appropriate summary text.
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1643.md
# 理由: 日本語でコメントを書きたい。
dotnet_diagnostic.SA1643.severity = none

## Roslynator.Analyzers ##

# Roslynator.AnalyzersやRoslynator.Formatting.Analyzersのデフォルトを分析なしとする。
# 理由: Microsoft.CodeAnalysis.NetAnalyzersやStyleCop.Analyzersなどとの重複が多いため。
dotnet_analyzer_diagnostic.category-roslynator.severity = none

# Merge 'else' with nested 'if'
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1006
dotnet_diagnostic.RCS1006.severity = warning

# Use explicitly/implicitly typed array
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1014
dotnet_diagnostic.RCS1014.severity = warning
roslynator_array_creation_type_style = implicit
roslynator_use_collection_expression = true

# Remove unnecessary braces in switch section
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1031
dotnet_diagnostic.RCS1031.severity = warning

# Remove redundant parentheses
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1032
# 理由: IDE0047と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_diagnostic.RCS1032.severity = none

# Remove redundant 'sealed' modifier
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1034
dotnet_diagnostic.RCS1034.severity = warning

# Remove enum default underlying type
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1042
dotnet_diagnostic.RCS1042.severity = warning

# Remove 'partial' modifier from type with a single part
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1043
dotnet_diagnostic.RCS1043.severity = warning

# Non-asynchronous method name should not end with 'Async'
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1047
# 理由: IDE1006で指定できない規則。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules
dotnet_diagnostic.RCS1047.severity = warning

# Use lambda expression instead of anonymous method
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1048
dotnet_diagnostic.RCS1048.severity = warning

# Simplify boolean comparison
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1049
dotnet_diagnostic.RCS1049.severity = warning

# Include/omit parentheses when creating new object
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1050
dotnet_diagnostic.RCS1050.severity = warning
roslynator_object_creation_parentheses_style = omit

# Use compound assignment
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1058
# 理由: IDE0054やIDE0074と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074
dotnet_diagnostic.RCS1058.severity = none

# Merge 'if' with nested 'if'
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1061
dotnet_diagnostic.RCS1061.severity = warning

# Simplify logical negation
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1068
dotnet_diagnostic.RCS1068.severity = warning

# Remove redundant base constructor call
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1071
dotnet_diagnostic.RCS1071.severity = warning

# Remove redundant constructor
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1074
dotnet_diagnostic.RCS1074.severity = warning

# Optimize LINQ method call
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1077
dotnet_diagnostic.RCS1077.severity = warning

# Throwing of new NotImplementedException
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1079
dotnet_diagnostic.RCS1079.severity = warning

# Use --/++ operator instead of assignment
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1089
# 理由: IDE0054と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074
dotnet_diagnostic.RCS1089.severity = none

# File contains no code
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1093
dotnet_diagnostic.RCS1093.severity = warning

# Use 'HasFlag' method or bitwise operator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1096
dotnet_diagnostic.RCS1096.severity = warning
roslynator_enum_has_flag_style = method

# Remove redundant 'ToString' call
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1097
dotnet_diagnostic.RCS1097.severity = warning

# Default label should be the last label in a switch section
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1099
dotnet_diagnostic.RCS1099.severity = warning

# Unnecessary interpolation
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1105
dotnet_diagnostic.RCS1105.severity = warning

# Remove redundant 'ToCharArray' call
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1107
dotnet_diagnostic.RCS1107.severity = warning

# Combine 'Enumerable.Where' method chain
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1112
dotnet_diagnostic.RCS1112.severity = warning

# Use 'string.IsNullOrEmpty' method
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1113
dotnet_diagnostic.RCS1113.severity = warning

# Remove redundant delegate creation
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1114
dotnet_diagnostic.RCS1114.severity = warning

# Mark local variable as const
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1118
dotnet_diagnostic.RCS1118.severity = warning

# Inline local variable
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1124
# 理由: 一時変数にしたい場合もある。また、Visual Studioの「インラインの一時変数」と重複。
# https://learn.microsoft.com/visualstudio/ide/reference/inline-temporary-variable
dotnet_diagnostic.RCS1124.severity = none

# Bitwise operation on enum without Flags attribute
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1130
dotnet_diagnostic.RCS1130.severity = warning

# Remove redundant overriding member
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1132
dotnet_diagnostic.RCS1132.severity = warning

# Remove redundant Dispose/Close call
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1133
dotnet_diagnostic.RCS1133.severity = warning

# Remove redundant statement
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1134
dotnet_diagnostic.RCS1134.severity = warning

# Merge switch sections with equivalent content
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1136
dotnet_diagnostic.RCS1136.severity = warning

# Use conditional access
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1146
dotnet_diagnostic.RCS1146.severity = warning

# Remove redundant cast
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1151
dotnet_diagnostic.RCS1151.severity = warning

# Sort enum members
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1154
dotnet_diagnostic.RCS1154.severity = warning

# Avoid chain of assignments
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1162
dotnet_diagnostic.RCS1162.severity = warning

# Unused type parameter
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1164
# https://github.com/dotnet/roslyn/issues/44330
dotnet_diagnostic.RCS1164.severity = warning

# Use read-only auto-implemented property
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1170/
dotnet_diagnostic.RCS1170.severity = warning

# Use 'is' operator instead of 'as' operator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1172
dotnet_diagnostic.RCS1172.severity = warning

# Remove redundant async/await
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1174
dotnet_diagnostic.RCS1174.severity = warning

# Convert comment to documentation comment
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1181
dotnet_diagnostic.RCS1181.severity = warning

# Remove redundant base interface
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1182
dotnet_diagnostic.RCS1182.severity = warning

# Join string expressions
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1190
dotnet_diagnostic.RCS1190.severity = warning

# Declare enum value as combination of names
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1191
dotnet_diagnostic.RCS1191.severity = warning

# Unnecessary usage of verbatim string literal
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1192
# 理由: Visual Studioのリファクタリングと重複。ただし、警告レベルの設定ができないため有効にする。
# https://learn.microsoft.com/visualstudio/ide/reference/convert-between-regular-string-verbatim-string
dotnet_diagnostic.RCS1192.severity = warning

# Overriding member should not change 'params' modifier
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1193
dotnet_diagnostic.RCS1193.severity = warning

# Use ^ operator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1195
dotnet_diagnostic.RCS1195.severity = warning

# Call extension method as instance method
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1196
dotnet_diagnostic.RCS1196.severity = warning

# Unnecessary null check
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1199
dotnet_diagnostic.RCS1199.severity = warning

# Use EventArgs.Empty
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1204
dotnet_diagnostic.RCS1204.severity = warning

# Order named arguments according to the order of parameters
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1205
dotnet_diagnostic.RCS1205.severity = warning

# Use conditional access instead of conditional expression
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1206/
# 理由: IDE0031ではNull許容型のValueプロパティアクセスの簡略化設定ができない。
dotnet_diagnostic.RCS1206.severity = warning

# Reduce 'if' nesting
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1208
dotnet_diagnostic.RCS1208.severity = warning

# Remove redundant assignment
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1212
dotnet_diagnostic.RCS1212.severity = warning

# Unnecessary interpolated string
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1214
dotnet_diagnostic.RCS1214.severity = warning

# Expression is always equal to true/false
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1215
dotnet_diagnostic.RCS1215.severity = warning

# Unnecessary unsafe context
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1216
dotnet_diagnostic.RCS1216.severity = warning

# Simplify code branching
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1218
dotnet_diagnostic.RCS1218.severity = warning

# Merge preprocessor directives
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1222
dotnet_diagnostic.RCS1222.severity = warning

# Validate arguments correctly
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1227
dotnet_diagnostic.RCS1227.severity = warning

# Unnecessary explicit use of enumerator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1230
dotnet_diagnostic.RCS1230.severity = warning

# Use short-circuiting operator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1233
dotnet_diagnostic.RCS1233.severity = warning

# Optimize method call
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1235
dotnet_diagnostic.RCS1235.severity = warning

# Use exception filter
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1236
dotnet_diagnostic.RCS1236.severity = warning

# Use 'for' statement instead of 'while' statement
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1239/
dotnet_diagnostic.RCS1239.severity = warning

# Operator is unnecessary
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1240
dotnet_diagnostic.RCS1240.severity = warning

# Use element access
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1246
dotnet_diagnostic.RCS1246.severity = warning

# Fix documentation comment tag
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1247
dotnet_diagnostic.RCS1247.severity = warning

# Normalize null check
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1248
dotnet_diagnostic.RCS1248.severity = warning
roslynator_null_check_style = pattern_matching

# Unnecessary null-forgiving operator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1249
dotnet_diagnostic.RCS1249.severity = warning

# Remove unnecessary braces from record declaration
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1251
dotnet_diagnostic.RCS1251.severity = warning

# Normalize usage of infinite loop
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1252
dotnet_diagnostic.RCS1252.severity = warning
roslynator_infinite_loop_style = while

# Format documentation comment summary
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1253
dotnet_diagnostic.RCS1253.severity = warning
roslynator_doc_comment_summary_style = multi_line

# Normalize format of enum flag value
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1254
dotnet_diagnostic.RCS1254.severity = warning
roslynator_enum_flag_value_style = shift_operator

# Invalid argument null check
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1256
dotnet_diagnostic.RCS1256.severity = warning

# Use enum field explicitly
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1257
dotnet_diagnostic.RCS1257.severity = warning

# Unnecessary enum flag
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1258
dotnet_diagnostic.RCS1258.severity = warning

# Add/remove trailing comma
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1260
dotnet_diagnostic.RCS1260.severity = warning
roslynator_trailing_comma_style = omit

# Resource can be disposed asynchronously
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1261
dotnet_diagnostic.RCS1261.severity = warning

# Unnecessary raw string literal
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1262
dotnet_diagnostic.RCS1262.severity = warning

# Remove redundant catch block
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1265
dotnet_diagnostic.RCS1265.severity = warning

# Use raw string literal
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1266
dotnet_diagnostic.RCS1266.severity = warning

# Use string interpolation instead of 'string.Concat'
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1267
dotnet_diagnostic.RCS1267.severity = warning

# Simplify numeric comparison
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1268
dotnet_diagnostic.RCS1268.severity = warning

## Roslynator.Formatting.Analyzers ##

# Add blank line before using directive list
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0006/
dotnet_diagnostic.RCS0006.severity = warning

# Add blank line between declarations
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0010
# 理由: SA1516はフィールド同士やEnumメンバー同士の分析対象外。
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1516.md
dotnet_diagnostic.RCS0010.severity = warning

# Add/remove blank line between single-line accessors
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0011
dotnet_diagnostic.RCS0011.severity = warning
roslynator_blank_line_between_single_line_accessors = false

# Add/remove blank line between using directives
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0015
dotnet_diagnostic.RCS0015.severity = warning
roslynator_blank_line_between_using_directives = never

# Place new line after/before binary operator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0027
dotnet_diagnostic.RCS0027.severity = warning
roslynator_binary_operator_new_line = before

# Remove new line before base list
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0039
dotnet_diagnostic.RCS0039.severity = warning

# Remove new line between 'if' keyword and 'else' keyword
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0041
dotnet_diagnostic.RCS0041.severity = warning

# Put auto-accessors on a single line
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0042
# 理由: IDE0055は複数行のコードブロックでは発生しない。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options#csharp_preserve_single_line_blocks
# https://github.com/dotnet/roslyn/issues/25957
dotnet_diagnostic.RCS0042.severity = warning

# Add blank line after top comment
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0049
dotnet_diagnostic.RCS0049.severity = warning

# Place new line after/before equals token
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0052。
dotnet_diagnostic.RCS0052.severity = warning
roslynator_equals_token_new_line = after

# Fix formatting of a list
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0053
# 理由: SA1116やSA1117は、各引数を改行かつインデントずれ（なし・スペース3つなど）の場合に分析対象外。
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1116.md
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1117.md
dotnet_diagnostic.RCS0053.severity = warning

# Fix formatting of a call chain
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0054
dotnet_diagnostic.RCS0054.severity = warning

# Fix formatting of a binary expression chain
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0055
dotnet_diagnostic.RCS0055.severity = warning

# Place new line after/before null-conditional operator
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0059
dotnet_diagnostic.RCS0059.severity = warning
roslynator_null_conditional_operator_new_line = before

# Add/remove blank line between switch sections
# https://josefpihrt.github.io/docs/roslynator/analyzers/RCS0061/
# 理由: SA1513と競合するが、case内でブロックを使用することはあまりないため許容。
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1513.md
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3568
dotnet_diagnostic.RCS0061.severity = warning
roslynator_blank_line_between_switch_sections = omit

## IDisposableAnalyzers ##

# Dispose created
# https://github.com/DotNetAnalyzers/IDisposableAnalyzers/blob/master/documentation/IDISP001.md
# 理由: CA2000と重複。
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2000
dotnet_diagnostic.IDISP001.severity = none

## DotNetAnalyzers.DocumentationAnalyzers ##

# Render documentation as Markdown.
# https://github.com/DotNetAnalyzers/DocumentationAnalyzers/blob/master/docs/DOC900.md
# 理由: リファクタリング設定なので警告レベルではなく非表示にする。
dotnet_diagnostic.DOC900.severity = silent

# Convert a line or block comment to a documentation comment.
# https://github.com/DotNetAnalyzers/DocumentationAnalyzers/blob/master/docs/DOC901.md
# 理由: RCS1181と一部重複。
dotnet_diagnostic.DOC901.severity = none
