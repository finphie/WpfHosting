name: Build(.NET)

on:
  pull_request:
    paths:
      - '**/*.cs'
      - '**/*.xaml'
      - '**/*.razor'
      - '**/*.cshtml'
      - '**/*.csproj'
      - '**/*.sln'
      - '**/Directory.Build.props'
      - '**/Directory.Build.targets'
      - '**/.editorconfig'
      - '**/.globalconfig'
      - .github/workflows/build-dotnet.yml

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  dotnet-version: '7.0'

jobs:
  test:
    name: Test
    if: github.event.repository.name != 'dotfiles'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check file
        id: check
        shell: pwsh
        run: Write-Output "::set-output name=dotnet::$(Test-Path *.sln)"

      - name: Set DOTNET_INSTALL_DIR
        if: steps.check.outputs.dotnet == 'True' && !startswith(matrix.os, 'mac')
        shell: pwsh
        run: |
          $os = '${{ matrix.os }}'
          $installDir = $os.StartsWith('windows') ? 'C:/Program Files/dotnet' : '/usr/share/dotnet'
          Write-Output "DOTNET_INSTALL_DIR=$installDir" | Out-File $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Setup .NET 7
        if: steps.check.outputs.dotnet == 'True'
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.dotnet-version }}
          include-prerelease: true

      - name: Setup .NET 6
        if: steps.check.outputs.dotnet == 'True' && startswith(matrix.os, 'mac')
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: .NET Build
        if: steps.check.outputs.dotnet == 'True'
        run: dotnet build --configuration Release -warnAsError

      - name: .NET Test
        if: steps.check.outputs.dotnet == 'True'
        run: dotnet test --configuration Release --no-build
